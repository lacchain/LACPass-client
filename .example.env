ENV= prod
#PORT

PORT = 80 # use port 80 when running with docker
EXPOSED_CONTAINER_SERVER_PORT = 3010

#DOCS

DOCS_ENABLED = true

#TYPEORM

TYPEORM_TYPE = postgres
TYPEORM_HOST = localhost
TYPEORM_USERNAME = postgres
TYPEORM_PASSWORD = postgres
TYPEORM_DATABASE = laccpass_client
TYPEORM_PORT = 5432
TYPEORM_SYNCHRONIZE = false
TYPEORM_LOGGING = true
TYPEORM_MIGRATIONS_RUN = true
EXPOSED_CONTAINER_TYPEORM_PORT = 5440

#REDIS

REDIS_HOST = redis
REDIS_PORT = 6379
REDIS_PASSWORD = redis
EXPOSED_CONTAINER_REDIS_PORT = 6390

#TOKEN

JWT_SECRET = some-secret-string
ACCESS_TOKEN_LIFE = 360000000

#RATE LIMIT

RATE_LIMIT_WINDOW = 5
RATE_LIMIT_MAX_REQUESTS = 100

#AWS

AWS_ID=<ID>
AWS_SECRET=<SECRET>
AWS_REGION=<REGION>
AWS_S3_BUCKETNAME=api-express-test
AWS_SES_API_VERSION=<VERSION>


#SENDGRID
SENDGRID_API_USER=<USER>
SENDGRID_API_KEY=<API-KEY>

#Email
EMAIL_TRANSPORTER = AWS


# EXTERNAL SERVICES
# IS_CLIENT_DEPENDENT_SERVICE = true # uncomment this only if the service communicates with the other components by way of external services
IDENTITY_MANAGER_BASE_URL = http://laccpass-identity-manager/api/v1
DID_LAC1 = /did/lac1
DID_LAC1_CONTROLLER= /did/lac1/controller
DID_LAC1_DECODE_DID = /did/lac1/decode
DID_LAC1_ADD_JWK_ATTR_FROM_X509_CERT = /did/lac1/attribute/add/jwk-from-x509certificate


# Did Registry
CHAIN_ID = 0x9e55c
# DID_REGISTRY_ADDRESS = 0x00f23cda3cbec27ae630894dd84e88033676d136 # optional address, just in case you are willing to use another did registry
# DOMAIN_NAME = lacchain.id # optional param just in case you are willing to use another domain name

# Blockchain Connection
# for open protestnet: 'http://35.185.112.219'
# for mainnet: TBD
NODE_RPC_URL = http://35.185.112.219
#Node Address depends on the lacchain node you are connecting with
NODE_ADDRESS = 0xad730de8c4bfc3d845f7ce851bcf2ea17c049585

## Chain Of trust
CHAIN_OF_TRUST_BASE_URL = http://laccpass-chain-of-trust/api/v1
COT_CREATE_MANAGER = /manager
COT_GET_MANAGER = /manager